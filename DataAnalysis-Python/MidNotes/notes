### Dictonaries ###

py link : https://docs.python.org/3/tutorial/datastructures.html#dictionaries 

1) Dictonaries are the only mappings which are mutable like lists. 

2) You can only use immutable type as keys in dictionaries.
		like string, number, tuple only if they contain strings,numbers or tuples.
		if a tuple contains mutable type, it cannot be used as a key. Even list cannot be used as a key. 
		Dicts need their keys to be unique obviously as they use keys as index. 

3) dictex = {} -> Empty dict. , {'key':value, 'key':value}
	
4) The main operations on a dictionary are storing a value with some key and extracting the value given the key. 
		It is also possible to delete a key:value pair with del. If you store using a key that is already in use, the old value associated 
		with that key is forgotten. It is an error to extract a value using a non-existent key.  
 
 5) list(d) -> returns a list of the dict. 
	  sorted(d) -> returns a sorted list of the dict. 

6) Using "in" operator to check if something is in the dict or not. 

7) dict() directly typecasts and build a dict from a sequence of key-value pairs. 
 
8) The operators is and is not compare whether two objects are really the same object; this only matters for mutable objects like lists.
	All comparison operators have the same priority, which is lower than that of all numerical operators. 

 
### Lists ###

Link lists: https://python-reference.readthedocs.io/en/latest/docs/list/
				  https://docs.python.org/3/library/stdtypes.html#lists	

1) Lists are mutable , ordered and indexed collections of objects.

2)  List comprehensions: [x for x in iterable]
3) List constructor: list()
 
